<section>
    <div class="table-container table-responsive scrollbar-custom " id="style-2">

        <table class="table table-border table-hover">
            <thead class="th-cont" style="position: sticky;top: 0;">

                <tr>
                    <th class="table-header" scope="col">#</th>
                    <th class="table-header" scope="col">Name</th>
                    <th class="table-header" scope="col">Role</th>
                    <th class="table-header" scope="col">Status</th>
                    <th class="table-header" scope="col">Email</th>
                    <th class="table-header" scope="col">Phone</th>
                    <th class="table-header" scope="col">Country</th>
                    <th class="table-header" scope="col">Registered</th>
                    <th class="table-header" scope="col">Actions</th>

                </tr>
            </thead>
    </div>
    </div>
    <tbody id="getTableData">

        <% if(users) {%>
            <% users.forEach((element,idx)=>{ %>

                <tr id="getE">
                    <th scope="row">
                        <%= idx +=1 %>
                    </th>
                    <input type="hidden" name="userId" class="userId" value="<%= element._id %> ">
                    <td class="no-wrap">

                        <span id="user_name">

                            <%= element.first_name+" "+element.last_name  %>
                       </span>

                            </td>
                    
                            <td>
                                <span id=" role">

                                <%= element.user_type===0 ? " User" :element.user_type===3 ? "Admin" :"Agent" %>
                        </span>
                    </td>
                    <td class="status no-wrap"><span
                            class="status-indicator status-indicator--<%= element.active?'active':'inactive' %>"></span>
                        <%= element.active ?"Active": "inactive" %>
                    </td>
                    <td id="email-data">
                        <%= element.email %>
                    </td>
                    <td class="no-wrap">
                        <%= element.phone ? element.phone: "+133 934465654" %>
                    </td>
                    <td>
                        <%= element.location %>
                    </td>
                    <td>
                        <% var monthNames=[ "January" , "February" , "March" , "April" , "May" , "June" , "July"
                            , "August" , "September" , "October" , "November" , "December" ]; %>

                            <% var d=element.createdAt.getDate(); var m=monthNames[element.createdAt.getMonth()]; var
                                y=element.createdAt.getFullYear(); %>
                                <%= d+ " " +m+ " " +y%>
                    </td>
                    <td class="action-icons">
                        <div class="td-cont">

                            <i class="fa-solid fa-pen-to-square edit call-to-action"></i>

                            <i class="fa-regular fa-eye view call-to-action"></i>

                            <a href="#" data-toggle="modal" data-target="#basicModal"><i id="deleteUser"
                                    class="fa-solid fa-trash trash call-to-action">

                                </i>
                            </a>

                        </div>

                    </td>
                    <!-- basic modal -->
                    <div id="modal-container">

                    </div>

                </tr>

                <% }) %>
                    <% } %>
    </tbody>
    </table>

    </div>

    </main>
    <script>
        const modalContainer = document.getElementById("modal-container");

        function renderData(name, email, userRole, id) {

            const modal = `

            <div class="modal fade" id="basicModal" data-backdrop="static" tabindex="-1" role="dialog"
            aria-labelledby="basicModal" aria-hidden="true">
        
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title" id="myModalLabel">Confirmation Message</h4>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <p>Are you sure, you want to delete this user?</p>
                        <div class="dialog_content">
                            <h4>Name:</h4>
                            <h4 class="h4">
                                ${name}
                        </h4>
                    </div>
                    <div class=" dialog_content">
                                    <h4>Email:</h4>
                                    <h4 class="h4">
                                        ${email}
                                    </h4>
                        </div>
                        <div class="dialog_content">
                            <h4>Role:</h4>
                            <h4 class="h4">
                                ${userRole}
                            </h4>
                        </div>
                    </div>
                    <div class=" modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-danger" id="deleteSelectedUser" style="display:flex; gap:1rem"><span class="spinner"><i class="fa fa-refresh fa-spin" style="font-size:1rem;"></i></span>Delete</button>
                    </div>
                </div>
            </div>
        </div>
            `
            return modal
        }



        function messageDialog(msg) {
            return (
                `
        <div class="modal fade" id="confirmationModal" tabindex="-1" role="dialog" aria-labelledby="basicModal" aria-hidden="true" data-backdrop="static">
            <div class="modal-dialog modal-sm">
              <div class="modal-content">
                <div class="modal-header">
                  <h6 class="modal-title" id="myModalLabel">Confirmation Message</h6>
                  <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                  </button>
                </div>
                <div class="modal-body">
                  <p>User has been deleted!.</p>
                </div>
                <div class="modal-footer">
                  
                  <button type="button" class="btn btn-success" id="refreshPage">OK</button>
                </div>
              </div>
            </div>
          </div>
        `
            )
        }

        //makes a get fetch request to update user route
        const fetchRequest = async () => {
            const location = window.location.hostname;
            const settings = {
                method: 'GET',
                headers: {
                    Accept: 'application/json',
                    'Content-Type': 'application/json',
                }
            };

            try {
                const response = await fetch(`${location}:3400/admin/update/user/${userId}`, settings);
                const data = await response.json();
                return console.log(data);
            } catch (e) {
                return e;
            }
        }
        let userId = document.querySelectorAll(".userId")
        //selects of nodes with the class name call-to-action
        let nodeList = document.querySelectorAll(".call-to-action")
        nodeList.forEach((element, idx) => {
            element.addEventListener("click", function (event) {
                //change the identifiers to id(to be unique in the app)
                console.log(element.classList[2])
                if (element.classList[2] === "view") {
                    //goes three levels up to get table row
                    let value = element.parentElement.parentElement.parentElement;
                    //gets and trim email element to eliminate white spaces 
                    let emailText = value.children[5] ? value.children[5].innerHTML.trim() : value
                    //validates email
                    const validateEmail = (email) => {
                        return String(email)
                            .toLowerCase()
                            .match(
                                /^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$/
                            );
                    };
                    //console.log(validateEmail(emailText))
                    /**
                    *
                    * @param receives email regex validation function 
                    * redirects admin to user profile container with email as param
                    * *? should email or userId be used as param?
                    */
                    if (validateEmail(emailText)) {
                        window.location.href = `/view/user/profile/${emailText}`;
                    }
                    //condition checks if the clicked icon contains the text "edit"

                } else if (element.classList[2] === "edit") {
                    //fetchRequest()
                    let getElement = element.parentElement.parentElement.parentElement;
                    //TODO: work on this 
                    //this gets individual user id from a hidden input
                    let getUserId = getElement.children[1].value;
                    //redirects user to update user component with userId
                    window.location.href = `/admin/update/user/${getUserId}`
                } else if (element.classList[2] === "trash") {
                    let value = element.parentElement.parentElement.parentElement.parentElement
                    let elementChildren = value.children

                    //element.parentElement.setAttribute("id", "confirm")

                    modalContainer.innerHTML = renderData(
                        elementChildren[2].textContent.trim(),
                        elementChildren[5].textContent.trim(),
                        elementChildren[3].textContent.trim(),
                        elementChildren[1].value
                    )
                    //spinner element
                    const spinnerElem = document.querySelector(".spinner")
                    console.log(spinnerElem);
                    spinnerElem.style.display = "none";
                    document.getElementById("deleteSelectedUser")
                        .addEventListener("click", function (event) {
                            const id = elementChildren[1].value
                            spinnerElem.style.display = "block";
                            fetch(`/admin/delete/${id}`, {
                                method: "DELETE"
                            }).then(response => {
                                if (response.statusText === "OK") {
                                    //spinner element
                                    spinnerElem.style.display = "none";
                                    document.getElementById("show-message").innerHTML = messageDialog();
                                    $('#basicModal').modal('hide')
                                    $('#confirmationModal').modal('show');
                                    document.getElementById("refreshPage").addEventListener("click", function (event) {
                                        location.reload()

                                    })
                                }

                            }).catch(error => {
                                alert("Sorry!, Something went wrong")
                                spinnerElem.style.display = "none";
                            })
                        })

                }
            })
        })



    </script>


</section>